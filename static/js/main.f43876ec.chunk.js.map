{"version":3,"sources":["pages/burger-constructor/styles.module.css","components/order-details/styles.module.css","components/modal-overlay/styles.module.css","pages/ingredient/styles.module.css","pages/not-found-404/styles.module.css","components/orders/styles.module.css","pages/order-history/styles.module.css","pages/order-info/styles.module.css","services/types/websocket.ts","services/api.tsx","services/slices/authSlice.ts","services/slices/orderSlice.ts","services/slices/constructorSlice.ts","services/slices/ingredientsSlice.ts","services/actions.ts","services/reducer.ts","services/rootReducer.ts","services/store.ts","services/middleware/socket-middleware.ts","pages/auth/login/index.tsx","components/navigation/index.tsx","pages/profile/index.tsx","utils/index.ts","components/protected-route.tsx","pages/auth/forgot-password/index.tsx","pages/auth/reset-password/index.tsx","pages/auth/register/index.tsx","components/order-details/index.tsx","components/modal-overlay/index.tsx","components/modal/index.tsx","components/main/index.tsx","components/burger-constructor/index.tsx","components/ingredient-card/index.tsx","components/burger-ingredients/index.tsx","pages/burger-constructor/index.tsx","components/ingredient-details/index.tsx","pages/ingredient/index.tsx","pages/modal/ModalPage.tsx","pages/not-found-404/index.tsx","components/app-header/index.tsx","components/order-card/index.tsx","components/orders/index.tsx","components/feed-info/index.tsx","pages/feed/index.tsx","pages/order-history/index.tsx","components/order-info/index.tsx","pages/order-info/index.tsx","pages/modal-order/index.tsx","components/app/index.tsx","reportWebVitals.ts","index.tsx","pages/auth/styles.module.css","components/ingredient-details/styles.module.css","components/order-card/styles.module.css","components/order-info/styles.module.css","components/burger-constructor/styles.module.css","components/navigation/styles.module.css","components/burger-ingredients/styles.module.css","components/app-header/styles.module.css","components/ingredient-card/styles.module.css","pages/profile/styles.module.css","components/modal/styles.module.css","components/feed-info/styles.module.css","pages/feed/styles.module.css"],"names":["module","exports","WebsocketStatus","Api","baseUrl","_baseUrl","_headers","_makeRequest","endPoint","method","token","body","Authorization","fetch","headers","JSON","stringify","then","res","checkReponse","catch","err","a","message","refreshToken","refreshData","localStorage","setItem","accessToken","split","Promise","reject","this","ok","json","getItem","api","loginRequest","createAsyncThunk","login","data","Error","registerRequest","register","userRequest","getProfile","response","success","user","updateProfileRequest","updateProfile","logoutRequest","info","logout","removeItem","initialState","loginRequestStart","loginRequestFailed","registerRequestStart","registerRequestFailed","userRequestStart","userRequestFailed","updateProfileRequestStart","updateProfileRequestFailed","logoutRequestStart","logoutRequestFailed","authSlice","createSlice","name","reducers","setTokenAction","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_","actions","createOrderRequest","ingredients","status","statusText","orderSlice","orderRequestStart","orderRequestFailed","orderDetails","constructorSlice","main","bun","counts","addIngredient","type","newIngredient","_id","push","removeIngredient","filter","index","removeBun","moveIngredient","dragIndex","hoverIndex","splice","fetchIngredients","ingredientsSlice","request","failed","connect","createAction","disconnect","wsConnecting","wsOpen","wsClose","wsMessage","wsError","OFFLINE","connectionError","orders","total","totalToday","ordersReducer","createReducer","CONNECTING","ONLINE","rootReducer","combineReducers","ingredientsReducer","constructorReducer","order","orderReducer","auth","authReducer","ordersMiddleware","wsActions","store","socket","isConnected","reconnectTimer","url","next","dispatch","wsConnect","wsDisconnect","wsSendMessage","onOpen","onClose","onError","onMessage","match","console","log","WebSocket","onopen","onerror","onmessage","event","parsedData","parse","onclose","code","toString","window","setTimeout","send","clearTimeout","close","socketMiddleware","OrdersWsConnect","OrdersWsDisconnect","OrdersWsConnecting","OrdersWsOpen","OrdersWsClose","OrdersWsError","OrdersWsNessage","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","useDispatch","dispatchHook","useSelector","selectorHook","LoginPage","history","useHistory","useState","email","password","setState","handleChange","e","target","value","to","location","from","className","styles","form","onSubmit","preventDefault","placeholder","onChange","size","tips","profile","Navigation","replace","nav","join","item","activeClassName","exact","onClick","button","tip","ProfilePage","useEffect","nameRef","useRef","passwordRef","onIconClick","ref","current","setNameDisabled","setPasswordDisabled","focus","isChanged","useMemo","object1","object2","Object","keys","key","shallowEqual","nameDisabled","passwordDisabled","icon","disabled","onBlur","buttons","ProtectedRoute","children","rest","isUserLoaded","setUserLoaded","init","useCallback","render","pathname","ForgotPasswordPage","setEmail","forgotPassword","isActive","ResetPasswordPage","resetPassword","goBack","RegisterPage","OrderDetails","details","container","number","ModalOverlay","modal_overlay","modalRoot","document","getElementById","Modal","header","onEscPressClose","addEventListener","removeEventListener","ReactDOM","createPortal","modal_wrapper","modal","stopPropagation","close_icon","Main","ingredient","useDrag","drag","useDrop","accept","hover","monitor","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","text","price","thumbnail","image","handleClose","add","accumulator","BurgerConstructor","isOpen","setOpen","id","uuid","dropTarget","totalPrice","reduce","handleCreateOrder","map","length","isLocked","list","sum","IngredientCard","useLocation","collect","isDrag","isDragging","dragRef","card","count","alt","src","BurgerIngredients","setCurrent","refs","Array","fill","tab1","tab2","tab3","min","Math","abs","findIndex","ingredients_container","tabs","active","grid","BurgerConstructorPage","DndProvider","backend","HTML5Backend","IngredientDetails","calories","proteins","fat","carbohydrates","img","structure","title","IngredientPage","useParams","find","ModalPage","NotFound404","not_found","getType","is","AppHeader","isConstructor","useRouteMatch","path","isFeed","isProfile","link_container","link","statuses","Icon","preview","OrderCard","orderIngredients","image_mobile","feed","Date","createdAt","toLocaleDateString","footer","previews","Orders","FeedInfo","done","FeedPage","flex","OrderHistoryPage","OrderInfo","forEach","values","row","OrderInfoPage","ModalOrderPage","ModalSwitch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.f43876ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3vzHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3x-Gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overlay\":\"styles_modal_overlay__32vYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"styles_ingredient__1rsNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"not_found\":\"styles_not_found__2zR6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"styles_orders__c_RL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"styles_history__6Bbcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"styles_order__1yS-L\"};","import { TOrder } from \"../../components/order-card\";\r\n\r\nexport enum WebsocketStatus {\r\n    CONNECTING = 'CONNECTING...',\r\n    ONLINE = 'ONLINE',\r\n    OFFLINE = 'OFFLINE'\r\n}\r\n\r\nexport type TOrders = Array<TOrder>;\r\n","type TConstructor = {\r\n  baseUrl: string;\r\n}\r\n\r\ntype TForgotPasswordBody = {\r\n  email: string;\r\n}\r\n\r\ntype TResetPasswordBody = {\r\n  password: string;\r\n  token: string;\r\n}\r\n\r\nexport type TLoginBody = {\r\n  password: string;\r\n  email: string;\r\n}\r\n\r\nexport type TRegisterBody = {\r\n  password: string;\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport type TProfileBody = {\r\n  password?: string;\r\n  email?: string;\r\n  name?: string;\r\n}\r\n\r\nexport type TProfileArgs = {\r\n  token?: string;\r\n  body?: TProfileBody;\r\n}\r\n\r\ntype THeaders = {\r\n  Authorization?: string;\r\n} & {\r\n  \"Content-Type\": \"application/json\",\r\n}\r\n\r\ntype TArgs= {\r\n  body?: any;\r\n  token?: string;\r\n}\r\n\r\nclass Api {\r\n  _baseUrl: string;\r\n  _headers: THeaders;\r\n\r\n  constructor({ baseUrl }: TConstructor) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  }\r\n\r\n  checkReponse(res: Response) {\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n  };\r\n\r\n  refreshToken() {\r\n    return this._makeRequest(\"/auth/token\", \"POST\", {\r\n      body: { token: localStorage.getItem(\"refreshToken\") || '' },\r\n    });\r\n  }\r\n\r\n  _makeRequest = (endPoint: string, method = \"GET\", { token, body }: TArgs): any => {\r\n    if (token)\r\n      this._headers = {\r\n        ...this._headers,\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n    return fetch(this._baseUrl + endPoint, {\r\n      method,\r\n      headers: this._headers,\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((res) => {\r\n        return this.checkReponse(res);\r\n      })\r\n      .catch(async (err) => {\r\n        if (err.message === \"jwt expired\") {\r\n          const refreshData = await this.refreshToken(); //обновляем токен\r\n          localStorage.setItem(\r\n            \"accessToken\",\r\n            refreshData.accessToken.split(\"Bearer \")[1]\r\n          );\r\n          localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\r\n          const res = await this._makeRequest(endPoint, method, {\r\n            token: refreshData.accessToken.split(\"Bearer \")[1],\r\n            body,\r\n          }); //повторяем запрос\r\n          return await this.checkReponse(res);\r\n        } else {\r\n          return Promise.reject(\"error\");\r\n        }\r\n      })\r\n  }\r\n\r\n  forgotPassword(body: TForgotPasswordBody) {\r\n    return this._makeRequest(\"/password-reset\", \"POST\", { body });\r\n  }\r\n\r\n  resetPassword(body: TResetPasswordBody) {\r\n    return this._makeRequest(\"/password-reset/reset\", \"POST\", { body });\r\n  }\r\n\r\n  login(body: TLoginBody) {\r\n    return this._makeRequest(\"/auth/login\", \"POST\", { body });\r\n  }\r\n\r\n  register(body: TRegisterBody) {\r\n    return this._makeRequest(\"/auth/register\", \"POST\", { body });\r\n  }\r\n\r\n  getProfile(token: string) {\r\n    return this._makeRequest(\"/auth/user\", \"GET\", { token });\r\n  }\r\n\r\n  updateProfile({ token, body}: TProfileArgs) {\r\n    return this._makeRequest(\"/auth/user\", \"PATCH\", { token, body });\r\n  }\r\n\r\n  logout() {\r\n    return this._makeRequest(\"/auth/logout\", \"POST\", {\r\n      body: { token: localStorage.getItem(\"refreshToken\") },\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://norma.nomoreparties.space/api\",\r\n});\r\n\r\nexport default api;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api, { TLoginBody, TProfileArgs, TRegisterBody } from '../api';\r\n\r\nexport const loginRequest = createAsyncThunk(\r\n  'auth/loginRequest',\r\n  async (body: TLoginBody) => {\r\n    const data = await api.login(body);\r\n    if (data === 'error') throw new Error();\r\n    localStorage.setItem(\"accessToken\", data.accessToken.split(\"Bearer \")[1]);\r\n    localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const registerRequest = createAsyncThunk(\r\n  'auth/registerRequest',\r\n  async (body: TRegisterBody) => {\r\n    const data = await api.register(body);\r\n    if (data === 'error') throw new Error();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const userRequest = createAsyncThunk(\r\n  'auth/userRequest',\r\n  async (token: string) => {\r\n    const response = await api.getProfile(token);\r\n    if (!response.success) throw new Error();\r\n    return response.user;\r\n  }\r\n);\r\n\r\nexport const updateProfileRequest = createAsyncThunk(\r\n  'auth/updateProfileRequest',\r\n  async ({ token, body }: TProfileArgs) => {\r\n    const response = await api.updateProfile({ token, body });\r\n    if (!response.success) throw new Error();\r\n    return response.user;\r\n  }\r\n);\r\n\r\nexport const logoutRequest = createAsyncThunk(\r\n  'auth/logoutRequest',\r\n  async (info) => {\r\n    const response = await api.logout();\r\n    if (!response.success) throw new Error();\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    return response.user;\r\n  }\r\n);\r\n\r\nexport type TUser = {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\ntype TAuthSliceState = {\r\n  loginRequestStart: boolean,\r\n  loginRequestFailed: boolean,\r\n\r\n  registerRequestStart: boolean,\r\n  registerRequestFailed: boolean,\r\n\r\n  userRequestStart: boolean,\r\n  userRequestFailed: boolean,\r\n\r\n  updateProfileRequestStart: boolean,\r\n  updateProfileRequestFailed: boolean,\r\n\r\n  logoutRequestStart: boolean,\r\n  logoutRequestFailed: boolean,\r\n\r\n  accessToken: string,\r\n  refreshToken: string,\r\n\r\n  user: TUser | null,\r\n}\r\n\r\nconst initialState: TAuthSliceState = {\r\n  loginRequestStart: false,\r\n  loginRequestFailed: false,\r\n\r\n  registerRequestStart: false,\r\n  registerRequestFailed: false,\r\n\r\n  userRequestStart: false,\r\n  userRequestFailed: false,\r\n\r\n  updateProfileRequestStart: false,\r\n  updateProfileRequestFailed: false,\r\n\r\n  logoutRequestStart: false,\r\n  logoutRequestFailed: false,\r\n\r\n  accessToken: \"\",\r\n  refreshToken: \"\",\r\n\r\n  user: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setTokenAction: (state, action) => {\r\n      state.accessToken = action.payload;\r\n    }\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(loginRequest.pending, state => {\r\n        state.loginRequestStart = true;\r\n      })\r\n      .addCase(loginRequest.fulfilled, (state, action) => {\r\n        state.loginRequestStart = false;\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken.split(\"Bearer \")[1];\r\n        state.refreshToken = action.payload.refreshToken;\r\n      })\r\n      .addCase(loginRequest.rejected, state => {\r\n        state.loginRequestStart = false;\r\n        state.loginRequestFailed = true;\r\n      })\r\n      .addCase(registerRequest.pending, state => {\r\n        state.registerRequestStart = true;\r\n      })\r\n      .addCase(registerRequest.fulfilled, (state, action) => {\r\n        state.registerRequestStart = false;\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken.split(\"Bearer \")[1];\r\n        state.refreshToken = action.payload.refreshToken;\r\n      })\r\n      .addCase(registerRequest.rejected, state => {\r\n        state.registerRequestStart = false;\r\n        state.registerRequestFailed = true;\r\n      })\r\n      .addCase(userRequest.pending, state => {\r\n        state.userRequestStart = true;\r\n      })\r\n      .addCase(userRequest.fulfilled, (state, action) => {\r\n        state.userRequestStart = false;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(userRequest.rejected, state => {\r\n        state.userRequestStart = false;\r\n        state.userRequestFailed = true;\r\n      })\r\n      .addCase(updateProfileRequest.pending, state => {\r\n        state.updateProfileRequestStart = true;\r\n      })\r\n      .addCase(updateProfileRequest.fulfilled, (state, action) => {\r\n        state.updateProfileRequestStart = false;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateProfileRequest.rejected, state => {\r\n        state.updateProfileRequestStart = false;\r\n        state.updateProfileRequestFailed = true;\r\n      })\r\n      .addCase(logoutRequest.pending, state => {\r\n        state.logoutRequestStart = true;\r\n      })\r\n      .addCase(logoutRequest.fulfilled, _ => initialState)\r\n      .addCase(logoutRequest.rejected, state => {\r\n        state.logoutRequestStart = false;\r\n        state.logoutRequestFailed = true;\r\n      })\r\n  }\r\n});\r\n\r\nexport const { setTokenAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst orderURL = 'https://norma.nomoreparties.space/api/orders';\r\n\r\ntype TArgs = {\r\n  ingredients: string[];\r\n  token: string;\r\n}\r\n\r\nexport const createOrderRequest = createAsyncThunk(\r\n  'order/createOrderRequest',\r\n  async ({ ingredients, token }: TArgs) => {\r\n    const response = await fetch(orderURL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ ingredients }),\r\n    });\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw new Error(response.status + ': ' + response.statusText);\r\n    }\r\n  }\r\n)\r\n\r\nconst orderSlice = createSlice({\r\n  name: 'order',\r\n  initialState: {\r\n    orderRequestStart: false,\r\n    orderRequestFailed: false,\r\n    orderDetails: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(createOrderRequest.pending, state => {\r\n        state.orderRequestStart = true;\r\n      })\r\n      .addCase(createOrderRequest.fulfilled, (state, action) => {\r\n        state.orderRequestStart = false;\r\n        state.orderDetails = action.payload;\r\n      })\r\n      .addCase(createOrderRequest.rejected, state => {\r\n        state.orderRequestStart = false;\r\n        state.orderRequestFailed = true;\r\n      })\r\n  }\r\n});\r\n\r\nexport default orderSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { TIngredient } from '../../types';\r\n\r\ntype TConstructorSliceState = {\r\n  main: (TIngredient & { id: string })[],\r\n  bun: TIngredient | null,\r\n  counts: Record<string, number>,\r\n}\r\n\r\nconst constructorSlice = createSlice({\r\n  name: 'builder',\r\n  initialState: {\r\n    main: [],\r\n    bun: null,\r\n    counts: {},\r\n  } as TConstructorSliceState,\r\n  reducers: {\r\n    addIngredient: (state, action) => {\r\n      if (action.payload.type !== 'bun') {\r\n        if (state.bun) {\r\n          const newIngredient = action.payload;\r\n          state.counts[newIngredient._id] = state.counts[newIngredient._id] ? state.counts[newIngredient._id] + 1 : 1\r\n          state.main.push(newIngredient);\r\n        }\r\n      } else {\r\n        if (state.bun) state.counts[state.bun._id] = 0;\r\n        state.bun = action.payload;\r\n        state.counts[action.payload._id] = 2;\r\n      }\r\n    },\r\n    removeIngredient: (state, action) => {\r\n      state.counts[state.main[action.payload]._id] =\r\n        state.counts[state.main[action.payload]._id] > 1\r\n        ? state.counts[state.main[action.payload]._id] - 1\r\n        : 0;\r\n      state.main = state.main.filter((_, index) => index !== action.payload);\r\n    },\r\n    removeBun: state => {\r\n     if (state.bun) {\r\n      delete state.counts[state.bun._id];\r\n     }\r\n      state.bun = null;\r\n    },\r\n    moveIngredient: (state, action) => {\r\n      const [dragIndex, hoverIndex] = action.payload;\r\n      state.main.splice(hoverIndex, 0, state.main.splice(dragIndex, 1)[0]);\r\n    }\r\n  },\r\n});\r\n\r\nexport const { addIngredient, removeIngredient, moveIngredient, removeBun } = constructorSlice.actions;\r\n\r\nexport default constructorSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { TIngredient } from '../../types';\r\n\r\nconst URL = 'https://norma.nomoreparties.space/api/ingredients';\r\n\r\nexport const fetchIngredients = createAsyncThunk(\r\n  'ingredients/fetchIngredients',\r\n  async () => {\r\n    const response = await fetch(URL);\r\n    if (response.ok) {\r\n      const { data } = await response.json();\r\n      return data;\r\n    } else {\r\n      throw new Error(response.status + ': ' + response.statusText);\r\n    }\r\n  }\r\n)\r\n\r\ntype TIngredientsSliceState = {\r\n  request: boolean;\r\n  failed: boolean;\r\n  ingredients: TIngredient[];\r\n}\r\n\r\nconst ingredientsSlice = createSlice({\r\n  name: 'ingredients',\r\n  initialState: {\r\n    request: false,\r\n    failed: false,\r\n    ingredients: [],\r\n  } as TIngredientsSliceState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchIngredients.pending, state => {\r\n        state.request = true;\r\n      })\r\n      .addCase(fetchIngredients.fulfilled, (state, action) => {\r\n        state.request = false;\r\n        state.ingredients = action.payload;\r\n      })\r\n      .addCase(fetchIngredients.rejected, state => {\r\n        state.request = false;\r\n        state.failed = true;\r\n      })\r\n  }\r\n});\r\n\r\nexport default ingredientsSlice.reducer;","import { createAction } from '@reduxjs/toolkit';\r\nimport { TOrder } from '../components/order-card';\r\n\r\ntype TData = {\r\n  orders: Array<TOrder>;\r\n  total: number;\r\n  totalToday: number;\r\n}\r\n\r\nexport const connect = createAction<string, 'WS_CONNECT'>('WS_CONNECT');\r\nexport const disconnect = createAction('WS_DISCONNECT');\r\nexport const wsConnecting = createAction('WS_CONNECTING');\r\nexport const wsOpen = createAction('WS_OPEN');\r\nexport const wsClose = createAction('WS_CLOSE');\r\nexport const wsMessage = createAction<TData, 'WS_MESSAGE'>('WS_MESSAGE');\r\nexport const wsError = createAction<string, 'WS_ERROR'>('WS_ERROR');\r\n\r\nexport type TWSActions = ReturnType<typeof connect>\r\n                                | ReturnType<typeof disconnect> \r\n                                | ReturnType<typeof wsConnecting> \r\n                                | ReturnType<typeof wsOpen> \r\n                                | ReturnType<typeof wsClose> \r\n                                | ReturnType<typeof wsMessage> \r\n                                | ReturnType<typeof wsError>;\r\n","import { TOrders, WebsocketStatus } from './types/websocket';\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { wsOpen, wsClose, wsMessage, wsError, wsConnecting } from \"./actions\";\r\n  \r\nexport type TOrdersState = {\r\n    status: WebsocketStatus,\r\n    connectionError: string,\r\n    orders: TOrders,\r\n    total: number,\r\n    totalToday: number,\r\n}\r\n\r\nconst initialState: TOrdersState = {\r\n    status: WebsocketStatus.OFFLINE,\r\n    connectionError: '',\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0,\r\n};\r\n\r\nexport const ordersReducer = createReducer(initialState, (builder) => {\r\n    builder\r\n      .addCase(wsConnecting, (state) => {\r\n          state.status = WebsocketStatus.CONNECTING;\r\n      })\r\n      .addCase(wsOpen, (state) => {\r\n          state.status = WebsocketStatus.ONLINE;\r\n          state.connectionError = '';\r\n      })\r\n      .addCase(wsClose, (state) => {\r\n        state.status = WebsocketStatus.OFFLINE;\r\n        state.orders = [];\r\n        state.total = 0;\r\n        state.totalToday = 0;\r\n      })\r\n      .addCase(wsError, (state, action) => {\r\n        state.connectionError = action.payload;\r\n      })\r\n      .addCase(wsMessage, (state, action) => {\r\n        state.orders = action.payload.orders;\r\n        state.total = action.payload.total;\r\n        state.totalToday = action.payload.totalToday;\r\n      })\r\n  })\r\n","import authReducer from './slices/authSlice';\r\nimport orderReducer from './slices/orderSlice';\r\nimport constructorReducer from './slices/constructorSlice';\r\nimport ingredientsReducer from './slices/ingredientsSlice';\r\nimport { ordersReducer } from './reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredients: ingredientsReducer,\r\n  builder: constructorReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n  orders: ordersReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { socketMiddleware } from \"./middleware/socket-middleware\";\r\nimport { rootReducer } from './rootReducer';\r\n\r\nimport { \r\n  connect as OrdersWsConnect, \r\n  disconnect as OrdersWsDisconnect,\r\n  wsConnecting as OrdersWsConnecting,\r\n  wsOpen as OrdersWsOpen,\r\n  wsClose as OrdersWsClose,\r\n  wsMessage as OrdersWsNessage,\r\n  wsError as OrdersWsError \r\n} from \"./actions\";\r\n\r\nconst wsActions = {\r\n  wsConnect: OrdersWsConnect,\r\n  wsDisconnect: OrdersWsDisconnect,\r\n  wsConnecting: OrdersWsConnecting,\r\n  onOpen: OrdersWsOpen,\r\n  onClose: OrdersWsClose,\r\n  onError: OrdersWsError,\r\n  onMessage: OrdersWsNessage,\r\n};\r\n\r\nconst ordersMiddleware = socketMiddleware(wsActions);\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(ordersMiddleware),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n  // preloadedState,\r\n  // enhancers: [customEnhancer],\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useDispatch = () => dispatchHook<AppDispatch>() // Export a hook that can be reused to resolve types\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n","import { ActionCreatorWithoutPayload, ActionCreatorWithPayload } from '@reduxjs/toolkit';\r\nimport { Middleware } from 'redux';\r\nimport { RootState } from '../store';\r\n\r\nexport type TwsActionTypes = {\r\n    wsConnect: ActionCreatorWithPayload<string>,\r\n    wsDisconnect: ActionCreatorWithoutPayload,\r\n    wsSendMessage?: ActionCreatorWithPayload<any>,\r\n    wsConnecting: ActionCreatorWithoutPayload,\r\n    onOpen: ActionCreatorWithoutPayload,\r\n    onClose: ActionCreatorWithoutPayload,\r\n    onError: ActionCreatorWithPayload<string>,\r\n    onMessage: ActionCreatorWithPayload<any>,\r\n}\r\n\r\nexport const socketMiddleware = (wsActions: TwsActionTypes): Middleware<{}, RootState> => {\r\n    return (store) => {\r\n      let socket: WebSocket | null = null;\r\n      let isConnected = false;\r\n      let reconnectTimer = 0;\r\n      let url = '';\r\n\r\n      return next => action => {\r\n        const { dispatch } = store;\r\n        const { wsConnect, wsDisconnect, wsSendMessage, onOpen, \r\n          onClose, onError, onMessage, wsConnecting } = wsActions;\r\n\r\n        if (wsConnect.match(action)) {\r\n          console.log('connect')\r\n          url = action.payload;\r\n          socket = new WebSocket(url);\r\n          isConnected = true;\r\n          dispatch(wsConnecting());\r\n        }\r\n\r\n        if (socket) {\r\n          socket.onopen = () => {\r\n            dispatch(onOpen());\r\n            console.log('open');\r\n          };\r\n  \r\n          socket.onerror = err  => {\r\n            console.log('error')\r\n          };\r\n  \r\n          socket.onmessage = event => {\r\n            const { data } = event;\r\n            const parsedData = JSON.parse(data);\r\n            dispatch(onMessage(parsedData));\r\n          };\r\n  \r\n          socket.onclose = event => {\r\n            if (event.code !== 1000) {\r\n              console.log('error')\r\n              dispatch(onError(event.code.toString()));\r\n            }\r\n            console.log('close')\r\n            dispatch(onClose());\r\n\r\n            if (isConnected) {\r\n              dispatch(wsConnecting());\r\n              reconnectTimer = window.setTimeout(() => {\r\n                dispatch(wsConnect(url));\r\n              }, 3000)\r\n            }\r\n\r\n          };\r\n  \r\n          if (wsSendMessage && wsSendMessage.match(action)) {\r\n            console.log('send')\r\n            socket.send(JSON.stringify(action.payload));\r\n          }\r\n\r\n          if (wsDisconnect.match(action)) {\r\n            console.log('disconnect')\r\n            clearTimeout(reconnectTimer)\r\n            isConnected = false;\r\n            reconnectTimer = 0;\r\n            socket.close();\r\n            dispatch(onClose());\r\n          }\r\n        }\r\n  \r\n        next(action);\r\n      };\r\n    };\r\n  };\r\n  ","import {\r\n  Button,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loginRequest } from \"../../../services/slices/authSlice\";\r\nimport styles from \"../styles.module.css\";\r\nimport { Redirect, useHistory} from \"react-router\";\r\nimport { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { TLocationState } from \"../../../types\";\r\nimport { useDispatch, useSelector } from \"../../../services/store\";\r\n\r\nfunction LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const { accessToken } = useSelector(\r\n    (store) => store.auth\r\n  );\r\n  const history = useHistory<TLocationState>();\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      loginRequest({\r\n        ...state\r\n      })\r\n    );\r\n  };\r\n\r\n  const token = localStorage.getItem('accessToken');\r\n\r\n  if (accessToken || token) {\r\n    return (\r\n      // Переадресовываем авторизованного пользователя на главную страницу\r\n      <Redirect\r\n        // Если объект state не является undefined, вернём пользователя назад.\r\n        to={history.location.state?.from || \"/\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className={styles.auth}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <h1 className=\"text text_type_main-medium primary\">Вход</h1>\r\n          <div className=\"mt-6\">\r\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" value={state.email} onChange={handleChange} />\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <Input type=\"password\" name=\"password\" placeholder=\"Пароль\" value={state.password} onChange={handleChange} />\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Войти\r\n            </Button>\r\n          </div>\r\n          <span className=\"text text_type_main-default secondary mt-20\">\r\n            Вы — новый пользователь?{\" \"}\r\n            <Link to=\"/register\">Зарегистрироваться</Link>\r\n          </span>\r\n          <span className=\"text text_type_main-default secondary mt-4\">\r\n            Забыли пароль?{\" \"}\r\n            <Link to=\"/forgot-password\">Восстановить пароль</Link>\r\n          </span>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport styles from './styles.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { logoutRequest } from '../../services/slices/authSlice';\r\n\r\nconst tips: Record<string, string> = {\r\n  profile: 'В этом разделе вы можете изменить свои персональные данные',\r\n  'order-history': 'В этом разделе вы можете просмотреть свою историю заказов',\r\n}\r\n\r\ntype TProps = {\r\n  location: string;\r\n}\r\n\r\nconst Navigation: React.FC<TProps> = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const logout = async () => {\r\n    await dispatch(logoutRequest());\r\n    history.replace('/login');\r\n  };\r\n\r\n  return (\r\n    <div className={[styles.nav, 'mr-15'].join(' ')}>\r\n      <ul className=\"text text_type_main-medium mb-20\">\r\n        <li className={styles.item}>\r\n          <NavLink to=\"/profile\" className=\"secondary\" activeClassName=\"primary\" exact>Профиль</NavLink>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <NavLink to=\"/profile/orders\" className=\"secondary\" activeClassName=\"primary\">История заказов</NavLink>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <button onClick={logout} className={[styles.button, 'text text_type_main-medium secondary'].join(' ')}>Выход</button>\r\n        </li>\r\n      </ul>\r\n      <span className={[styles.tip, 'text text_type_main-default secondary'].join(' ')}>{tips[location]}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import styles from \"./styles.module.css\";\r\nimport { useState, useRef, useEffect, useMemo, ChangeEvent, FormEvent } from \"react\";\r\nimport {\r\n  Button,\r\n  EmailInput,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport Navigation from \"../../components/navigation\";\r\nimport { TUser, updateProfileRequest } from \"../../services/slices/authSlice\";\r\nimport { shallowEqual } from '../../utils';\r\nimport { useDispatch, useSelector } from \"../../services/store\";\r\n\r\ntype TProfile = TUser & { password?: string };\r\n\r\nfunction ProfilePage() {\r\n  const dispatch = useDispatch();\r\n  const { user, accessToken } = useSelector((store) => store.auth);\r\n  const [state, setState] = useState<TProfile>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user) setState(state => ({ ...user, password: state.password}));\r\n  }, [user]);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onIconClick = (ref: React.RefObject<HTMLInputElement>) => () => {\r\n    ref.current && ref.current.name === 'name' ? setNameDisabled(false) : setPasswordDisabled(false);\r\n    setTimeout(() => ref.current && ref.current.focus(), 0);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(updateProfileRequest({ token: accessToken, body: state }))\r\n  }\r\n\r\n  const isChanged = useMemo(() => user && (!shallowEqual(state, user) || state.password), [state, user]);\r\n\r\n  const [nameDisabled, setNameDisabled] = useState(true);\r\n  const [passwordDisabled, setPasswordDisabled] = useState(true);\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <>\r\n      <main className={[styles.profile, \"main mt-30\"].join(\" \")}>\r\n        <Navigation location=\"profile\" />\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <Input\r\n            value={state.name}\r\n            onChange={handleChange}\r\n            name={\"name\"}\r\n            placeholder=\"Имя\"\r\n            icon=\"EditIcon\"\r\n            type=\"text\"\r\n            ref={nameRef}\r\n            disabled={nameDisabled}\r\n            onIconClick={onIconClick(nameRef)}\r\n            onBlur={() => setNameDisabled(true)}\r\n          />\r\n          <div className=\"mt-6\">\r\n            <EmailInput\r\n              value={state.email}\r\n              onChange={handleChange}\r\n              name={\"email\"}\r\n            />\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <Input\r\n              value={state.password || ''}\r\n              onChange={handleChange}\r\n              name={\"password\"}\r\n              onIconClick={onIconClick(passwordRef)}\r\n              icon=\"EditIcon\"\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              ref={passwordRef}\r\n              disabled={passwordDisabled}\r\n              onBlur={() => setPasswordDisabled(true)}\r\n            />\r\n          </div>\r\n          {isChanged && (\r\n            <div className={[styles.buttons, \"mt-6\"].join(\" \")}>\r\n              <Button onClick={() => setState(user)} type=\"secondary\">Отмена</Button>\r\n              <Button>Сохранить</Button>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","type TObject = Record<string, string>\r\n\r\nexport function shallowEqual(object1: TObject, object2: TObject) {\r\n  const keys1 = Object.keys(object1);\r\n  for (let key of keys1) {\r\n    if (object1[key] !== object2[key] && key !== \"password\") {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// export function getCookie(name) {\r\n//   const matches = document.cookie.match(\r\n//     new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n//   );\r\n//   return matches ? decodeURIComponent(matches[1]) : undefined;\r\n// }\r\n\r\n// export function setCookie(name, value, props) {\r\n//   props = props || {};\r\n//   let exp = props.expires;\r\n//   if (typeof exp == 'number' && exp) {\r\n//     const d = new Date();\r\n//     d.setTime(d.getTime() + exp * 1000);\r\n//     exp = props.expires = d;\r\n//   }\r\n//   if (exp && exp.toUTCString) {\r\n//     props.expires = exp.toUTCString();\r\n//   }\r\n//   value = encodeURIComponent(value);\r\n//   let updatedCookie = name + '=' + value;\r\n//   for (const propName in props) {\r\n//     updatedCookie += '; ' + propName;\r\n//     const propValue = props[propName];\r\n//     if (propValue !== true) {\r\n//       updatedCookie += '=' + propValue;\r\n//     }\r\n//   }\r\n//   document.cookie = updatedCookie;\r\n// }\r\n\r\n// export function deleteCookie(name) {\r\n//   setCookie(name, null, { expires: -1 });\r\n// }\r\n","import { Redirect, Route } from 'react-router-dom';\nimport { useCallback, useEffect, useState } from 'react';\nimport { setTokenAction, userRequest } from \"../services/slices/authSlice\";\nimport { useDispatch, useSelector } from '../services/store';\n\ntype TProps = {\n  path: string;\n  exact: boolean;\n};\n\nexport const ProtectedRoute: React.FC<TProps> = ({ children, ...rest }) => {\n  const [isUserLoaded, setUserLoaded] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((store) => store.auth);\n\n  const init = useCallback(async () => {\n    const token = localStorage.getItem('accessToken');\n    if (!user && token) {\n      dispatch(setTokenAction(token));\n      await dispatch(userRequest(token))\n    }\n    setUserLoaded(true);\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  if (!isUserLoaded) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import { Link } from \"react-router-dom\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport styles from '../styles.module.css';\r\nimport api from \"../../../services/api\";\r\nimport { Button, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ChangeEvent, FormEvent, useState } from \"react\";\r\n\r\nfunction ForgotPasswordPage() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    try {\r\n      e.preventDefault();\r\n      await api.forgotPassword({ email });\r\n      history.replace({\r\n        pathname: '/reset-password', \r\n        state: {\r\n         isActive: true\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const token = localStorage.getItem(\"accessToken\");\r\n\r\n  if (token) {\r\n    return (\r\n      // Переадресовываем авторизованного пользователя на главную страницу\r\n      <Redirect to={\"/\"} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className={[styles.auth, 'mt-100'].join(' ')}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <h1 className=\"text text_type_main-medium primary\">Восстановление пароля</h1>\r\n          <div className=\"mt-6\"><Input type=\"email\" name=\"email\" placeholder=\"Укажите e-mail\" value={email} onChange={handleChange} /></div>\r\n          <div className=\"mt-6\"><Button>Восстановить</Button></div>\r\n          <span className=\"text text_type_main-default secondary mt-20\">\r\n            Вспомнили пароль? <Link to='/login'>Войти</Link>\r\n          </span>\r\n        </form>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ForgotPasswordPage;","import { Button, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../../services/api\";\r\nimport styles from '../styles.module.css';\r\nimport { useHistory } from 'react-router';\r\nimport { TLocationState } from \"../../../types\";\r\n\r\nfunction ResetPasswordPage() {\r\n  const history = useHistory<TLocationState>(); \r\n  const isActive = history.location.state && history.location.state.isActive;\r\n  const [state, setState] = useState({\r\n    password: \"\",\r\n    code: '',\r\n  });\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isActive) {\r\n      history.goBack();\r\n    } else {\r\n      history.replace('/');\r\n    }\r\n  }, [history, isActive]);\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    try {\r\n      e.preventDefault();\r\n      await api.resetPassword({ password: state.password, token: state.code });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className={styles.auth}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <h1 className=\"text text_type_main-medium primary\">Восстановление пароля</h1>\r\n          <div className=\"mt-6\"><Input type=\"password\" name=\"password\" placeholder=\"Введите новый пароль\" value={state.password} onChange={handleChange} /></div>\r\n          <div className=\"mt-6\"><Input type=\"text\" name=\"code\" placeholder=\"Введите код из письма\" value={state.code} onChange={handleChange} /></div>\r\n          <div className=\"mt-6\"><Button>Сохранить</Button></div>\r\n          <span className=\"text text_type_main-default secondary mt-20\">\r\n            Вспомнили пароль? <Link to='/login'>Войти</Link>\r\n          </span>\r\n        </form>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordPage;","import { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerRequest } from \"../../../services/slices/authSlice\";\r\nimport styles from \"../styles.module.css\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"../../../services/store\";\r\n\r\nfunction RegisterPage() {\r\n  const dispatch = useDispatch();\r\n  const { accessToken } = useSelector((store) => store.auth);\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      registerRequest({ ...state })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [accessToken, history]);\r\n\r\n  const token = localStorage.getItem(\"accessToken\");\r\n\r\n  if (token) {\r\n    return (\r\n      // Переадресовываем авторизованного пользователя на главную страницу\r\n      <Redirect to={\"/\"} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className={styles.auth}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <h1 className=\"text text_type_main-medium primary\">Регистрация</h1>\r\n          <div className=\"mt-6\"> \r\n            <Input type=\"text\" name=\"name\" placeholder=\"Имя\" value={state.name} onChange={handleChange} />\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" value={state.email} onChange={handleChange} />\r\n          </div>\r\n          <div className=\"mt-6\"> \r\n            <PasswordInput\r\n              name=\"password\"\r\n              value={state.password} onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Зарегестрироваться\r\n            </Button>\r\n          </div>\r\n          <span className=\"text text_type_main-default secondary mt-20\">\r\n            Уже зарегистрированы? <Link to=\"/login\">Войти</Link>\r\n          </span>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport styles from \"./styles.module.css\";\r\nimport { CheckMarkIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TOrderDetails } from '../../types';\r\n\r\ntype TProps = {\r\n  details: TOrderDetails;\r\n  isOpen: boolean;\r\n}\r\n\r\nconst OrderDetails: React.FC<TProps> = ({ details }) => {\r\n  return (\r\n    <div className={`${styles.container} pt-30 pb-30`}>\r\n      <h2 className=\"text text_type_digits-large \">{details.order.number}</h2>\r\n      <span className=\"text text_type_main-medium mt-8 mb-15\">\r\n        идентификатор заказа\r\n      </span>\r\n      <CheckMarkIcon type=\"primary\" />\r\n      <span className=\"text text_type_main-default mt-15\">\r\n        Ваш заказ начали готовить\r\n      </span>\r\n      <span className=\"text text_type_main-default text_color_inactive mt-2\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n","import styles from \"./styles.module.css\";\r\n\r\ntype TProps = {\r\n  onClick: () => void;\r\n}\r\n\r\nconst ModalOverlay: React.FC<TProps> = ({ onClick }) => {\r\n  return (\r\n    <div\r\n      className={`${styles.modal_overlay}`}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./styles.module.css\";\r\nimport ModalOverlay from \"../modal-overlay\";\r\n\r\nconst modalRoot = document.getElementById(\"root\") as HTMLElement;;\r\n\r\ntype TProps = {\r\n  header?: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Modal: React.FC<TProps> = ({ children, header, onClose }) => {\r\n  const onEscPressClose = useCallback(({ key }) => {\r\n    if (key === \"Escape\") {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n  \r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", onEscPressClose);\r\n    return () => document.removeEventListener(\"keydown\", onEscPressClose);\r\n  }, [onEscPressClose]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.modal_wrapper}>\r\n      <ModalOverlay onClick={onClose} />\r\n      <div className={`${styles.modal} p-10`} onClick={e => e.stopPropagation()}>\r\n        <div className={`${styles.close_icon}`}>\r\n          <CloseIcon onClick={onClose} type=\"primary\" />\r\n        </div>\r\n        {header && (\r\n          <h2 className={`text text_type_main-large mt-3`}>{header}</h2>\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import {\r\n  ConstructorElement,\r\n  DragIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"../burger-constructor/styles.module.css\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useRef } from \"react\";\r\nimport { moveIngredient, removeIngredient } from \"../../services/slices/constructorSlice\";\r\nimport { TIngredient } from \"../../types\";\r\n\r\ntype TProps = {\r\n  ingredient: TIngredient;\r\n  index: number;\r\n}\r\n\r\nconst Main: React.FC<TProps> = ({ ingredient, index }) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const dispatch = useDispatch();\r\n  const [, drag] = useDrag({\r\n    type: 'main',\r\n    item: { ingredient, index },\r\n    // collect: monitor => ({\r\n    //   isDrag: monitor.isDragging()\r\n    // })\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'main',\r\n    hover(item: TProps, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n          return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      if (!clientOffset) return;\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n          return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n          return;\r\n      }\r\n      // Time to actually perform the action\r\n      dispatch(moveIngredient([dragIndex, hoverIndex]));\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <div className={`${styles.item} mb-4`} ref={ref}>\r\n      <div className=\"mr-2\">\r\n        <DragIcon type=\"primary\" />\r\n      </div>\r\n      <ConstructorElement\r\n        text={ingredient.name}\r\n        price={ingredient.price}\r\n        thumbnail={ingredient.image}\r\n        handleClose={() => dispatch(removeIngredient(index))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","import React, { useState, useMemo } from \"react\";\r\nimport {\r\n  Button,\r\n  ConstructorElement,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport styles from \"./styles.module.css\";\r\nimport OrderDetails from \"../order-details\";\r\nimport Modal from \"../modal\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Main from \"../main\";\r\nimport { useHistory } from \"react-router\";\r\nimport { addIngredient, removeBun } from \"../../services/slices/constructorSlice\";\r\nimport { createOrderRequest } from \"../../services/slices/orderSlice\";\r\nimport { TIngredient } from \"../../types\";\r\nimport { useDispatch, useSelector } from \"../../services/store\";\r\n\r\nconst add = (accumulator: number, a: TIngredient) => accumulator + a.price;\r\n\r\nconst BurgerConstructor = () => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { main, bun } = useSelector((store) => store.builder);\r\n  const { user, accessToken } = useSelector((store) => store.auth);\r\n  const { orderDetails, orderRequestFailed, orderRequestStart } = useSelector(\r\n    (store) => store.order\r\n  );\r\n\r\n  const [, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    drop(ingredient) {\r\n      dispatch(addIngredient({ ...(ingredient as TIngredient), id: uuid()}));\r\n    },\r\n  });\r\n\r\n  const totalPrice = useMemo(\r\n    () => main.reduce(add, 0) + (2 * ((bun && bun.price) || 0)),\r\n    [bun, main]\r\n  );\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleCreateOrder = async () => {\r\n    if (!user) {\r\n      history.replace('/login');\r\n    } else {\r\n      let order: string[] = main.map((ingredient: TIngredient) => ingredient._id);\r\n      if (bun) order = [...order, bun._id, bun._id];\r\n      await dispatch(createOrderRequest({ ingredients: order, token: accessToken }));\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={`constructor pt-25 pl-4`} ref={dropTarget}>\r\n      {bun || main.length > 0 ? (\r\n        <>\r\n          {bun && (\r\n            <div className={`${styles.item} ml-6 mb-4`}>\r\n              <ConstructorElement\r\n                type=\"top\"\r\n                isLocked={main.length > 0}\r\n                text={bun.name + \" (вверх)\"}\r\n                price={bun.price}\r\n                thumbnail={bun.image}\r\n                handleClose={() => dispatch(removeBun())}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={styles.list}>\r\n            {main?.map((ingredient: TIngredient, index: number) => (\r\n              <Main ingredient={ingredient} index={index} key={ingredient._id} />\r\n            ))}\r\n          </div>\r\n          {bun && (\r\n            <div className={`${styles.item} ml-6`}>\r\n              <ConstructorElement\r\n                type=\"bottom\"\r\n                isLocked={main.length > 0}\r\n                text={bun.name + \" (низ)\"}\r\n                price={bun.price}\r\n                thumbnail={bun.image}\r\n                handleClose={() => dispatch(removeBun())}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={`${styles.sum} mt-10`}>\r\n              <span className={`text text_type_digits-medium mr-10`}>\r\n                {totalPrice} <CurrencyIcon type=\"primary\" />\r\n              </span>\r\n              <Button\r\n                onClick={handleCreateOrder}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                // disabled={orderRequestStart}\r\n              >\r\n                {orderRequestStart ? \"Загрука...\" : \"Оформить заказ\"}\r\n              </Button>\r\n            </div>\r\n        </>\r\n      ) : (\r\n        <h2 className=\"text text_type_main-large\">Добавьте ингредиенты</h2>\r\n      )}\r\n      {isOpen && orderDetails && (\r\n        <Modal\r\n          onClose={handleClose}\r\n          {...(orderRequestFailed && { header: \"Что-то пошло не так...\" })}\r\n        >\r\n          <OrderDetails isOpen={isOpen} details={orderDetails} />\r\n        </Modal>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import styles from \"./styles.module.css\";\r\nimport {\r\n  Counter,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { TIngredient } from \"../../types\";\r\nimport { useSelector } from \"../../services/store\";\r\n\r\ntype TProps = {\r\n  ingredient: TIngredient;\r\n}\r\n\r\nconst IngredientCard: React.FC<TProps> = ({ ingredient }) => {\r\n  const location = useLocation();\r\n  const { counts } = useSelector((store) => store.builder);\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: ingredient,\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.card}`}\r\n      id={ingredient._id + ''}\r\n      ref={dragRef}\r\n    >\r\n      <Link\r\n        to={{\r\n          pathname: `/ingredients/${ingredient._id}`,\r\n          // This is the trick! This link sets\r\n          // the `ingredient` in location state.\r\n          state: { ingredient: location },\r\n        }}\r\n      >\r\n        {counts[ingredient._id] > 0 && (\r\n          <Counter count={counts[ingredient._id]} size=\"default\" />\r\n        )}\r\n        <img\r\n          alt=\"ingredient\"\r\n          src={ingredient.image}\r\n          className={`${styles.image} ml-4`}\r\n        />\r\n        <span className={`mt-1 ${styles.info} text text_type_digits-default`}>\r\n          {ingredient.price} <CurrencyIcon type=\"primary\" />\r\n        </span>\r\n        <span className={`mt-1 ${styles.info} text text_type_main-default`}>\r\n          {ingredient.name}\r\n        </span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientCard;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./styles.module.css\";\r\nimport IngredientCard from \"../ingredient-card\";\r\nimport { useSelector } from \"../../services/store\";\r\n\r\nconst BurgerIngredients = () => {\r\n  const [current, setCurrent] = useState('');\r\n  const { ingredients } = useSelector((store) => store.ingredients);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const refs = useRef<(HTMLHeadingElement | null )[]>(Array(3).fill(null));\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.addEventListener('scroll', _ => {\r\n        if (ref.current && refs.current[0] && refs.current[1] && refs.current[2]) {\r\n          const tab1 = refs.current[0].getBoundingClientRect().top - ref.current.getBoundingClientRect().top;\r\n          const tab2 = refs.current[1].getBoundingClientRect().top - ref.current.getBoundingClientRect().top;\r\n          const tab3 = refs.current[2].getBoundingClientRect().top - ref.current.getBoundingClientRect().top;\r\n          const min = Math.min(Math.abs(tab1), Math.abs(tab2),Math.abs(tab3));\r\n          const index = [tab1, tab2, tab3].findIndex(value => Math.abs(value) === min);\r\n          setCurrent(index + '');\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className={`${styles.ingredients_container}`}>\r\n      <h2 className={`text text_type_main-large`}>Соберите бургер</h2>\r\n      <div className={`${styles.tabs}`}>\r\n        <Tab value=\"one\" active={current ==='0'} onClick={setCurrent}>\r\n          Булки\r\n        </Tab>\r\n        <Tab value=\"two\" active={current === '1'} onClick={setCurrent}>\r\n          Соусы\r\n        </Tab>\r\n        <Tab value=\"three\" active={current === '2'} onClick={setCurrent}>\r\n          Научинки\r\n        </Tab>\r\n      </div>\r\n      <div className={`${styles.list}`} ref={ref}>\r\n        <h3 className=\"text text_type_main-medium mt-10\" ref={e => refs.current[0] = e}>Булки</h3>\r\n        <div className={`${styles.grid} mt-6 ml-4 mr-4`}>\r\n          {ingredients?.filter(item => item.type === \"bun\")\r\n            .map(item => (\r\n              <IngredientCard\r\n                ingredient={item}\r\n                key={item._id}\r\n              />\r\n            ))}\r\n        </div>\r\n        <h3 className=\"text text_type_main-medium mt-10\" ref={e => refs.current[1] = e}>Соусы</h3>\r\n        <div className={`${styles.grid} mt-6 ml-4 mr-4`}>\r\n          {ingredients?.filter(item => item.type === \"sauce\")\r\n            .map(item => (\r\n              <IngredientCard\r\n                ingredient={item}\r\n                key={item._id}\r\n              />\r\n            ))}\r\n        </div>\r\n        <h3 className=\"text text_type_main-medium mt-10\" ref={e => refs.current[2] = e}>Начинка</h3>\r\n        <div className={`${styles.grid} mt-6 ml-4 mr-4`}>\r\n          {ingredients?.filter(item => item.type === \"main\")\r\n            .map(item => (\r\n              <IngredientCard\r\n                ingredient={item}\r\n                key={item._id}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport BurgerConstructor from \"../../components/burger-constructor\";\r\nimport BurgerIngredients from \"../../components/burger-ingredients\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\n\r\nfunction BurgerConstructorPage() {\r\n  return (\r\n    <main className={`${styles.main}`}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n      </DndProvider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default BurgerConstructorPage;\r\n","import styles from \"./styles.module.css\";\r\nimport { TIngredient } from \"../../types\";\r\n\r\ntype TProps = {\r\n  ingredient: TIngredient;\r\n}\r\n\r\nconst IngredientDetails: React.FC<TProps> = ({ ingredient }) => {\r\n  const { name, image, calories, proteins, fat, carbohydrates } = ingredient;\r\n\r\n  return (\r\n      <div className={`${styles.container} pb-15`}>\r\n        <div className={styles.img}>\r\n          <img src={image} alt=\"ingredient\" />\r\n        </div>\r\n        <h3 className=\"text text_type_main-medium mt-4\">{name}</h3>\r\n        <div className={`${styles.structure} mt-8`}>\r\n          <div className=\"text_color_inactive\">\r\n            <span className={`${styles.title} text text_type_main-small`}>\r\n              Калорий, ккал\r\n            </span>\r\n            <span className=\"text text_type_digits-default\">{calories}</span>\r\n          </div>\r\n          <div className=\"text_color_inactive ml-5\">\r\n            <span className={`${styles.title} text text_type_main-small`}>\r\n              Белки, г\r\n            </span>\r\n            <span className=\"text text_type_digits-default\">{proteins}</span>\r\n          </div>\r\n          <div className=\"text_color_inactive ml-5\">\r\n            <span className={`${styles.title} text text_type_main-small`}>\r\n              Жиры, г\r\n            </span>\r\n            <span className=\"text text_type_digits-default\">{fat}</span>\r\n          </div>\r\n          <div className=\"text_color_inactive ml-5\">\r\n            <span className={`${styles.title} text text_type_main-small`}>\r\n              Углеводы, г\r\n            </span>\r\n            <span className=\"text text_type_digits-default\">\r\n              {carbohydrates}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default IngredientDetails;\r\n","import styles from \"./styles.module.css\";\r\nimport IngredientDetails from \"../../components/ingredient-details\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { TParams } from \"../../types\";\r\nimport { useSelector } from \"../../services/store\";\r\n\r\nfunction IngredientPage() {\r\n  const { ingredients } = useSelector((store) => store.ingredients);\r\n  const { id } = useParams<TParams>();\r\n  const ingredient = ingredients.find(({ _id }: { _id: string }) => _id === id)\r\n\r\n  if (!ingredient) return <Redirect to=\"/404\" />;\r\n\r\n  return (\r\n    <>\r\n      <main className={[styles.ingredient, \"main mt-30\"].join(\" \")}>\r\n        <IngredientDetails ingredient={ingredient} />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngredientPage;\r\n","import { useHistory, useParams } from \"react-router\";\r\nimport IngredientDetails from \"../../components/ingredient-details\";\r\nimport Modal from \"../../components/modal\";\r\nimport { useSelector } from \"../../services/store\";\r\nimport { TParams } from \"../../types\";\r\n\r\nfunction ModalPage() {\r\n  const history = useHistory();\r\n  const { id } = useParams<TParams>();\r\n  const { ingredients } = useSelector((store) => store.ingredients);\r\n  const ingredient = ingredients.find(({ _id }: { _id: string }) => _id === id)\r\n  if (!ingredient) return null;\r\n\r\n  const back = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Modal header=\"Детали ингредиента\" onClose={back}>\r\n      <IngredientDetails ingredient={ingredient} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalPage;","import styles from \"./styles.module.css\";\r\n\r\nfunction NotFound404() {\r\n  return (\r\n    <>\r\n      <main className={[styles.not_found, \"main mt-30\"].join(\" \")}>\r\n        <h1 className=\"text text_type_main-large\">Упсс... Страница не нашлась</h1>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound404;\r\n","import { BurgerIcon, ListIcon, ProfileIcon, Logo } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useRouteMatch } from 'react-router';\r\nimport styles from './styles.module.css';\r\n\r\nconst getType = (is: boolean) => is ? \"primary\" : \"secondary\"; \r\n\r\nconst AppHeader = () => {\r\n  const isConstructor = !!useRouteMatch({ path: '/', exact: true});\r\n  const isFeed = !!useRouteMatch('/feed');\r\n  const isProfile = !!useRouteMatch('/profile');\r\n\r\n  return (\r\n    <header className={`p-4 ${styles.header}`}>\r\n        <div className={styles.link_container}>\r\n          <NavLink to=\"/\" className={`p-5 ${styles.link} secondary`} activeClassName=\"primary\" exact={true}>\r\n            <BurgerIcon type={getType(isConstructor)} />\r\n            <span className=\"text text_type_main-default ml-2\">Конструктор</span>\r\n          </NavLink>\r\n          <NavLink to=\"/feed\" className={`p-5 ml-2 ${styles.link} secondary`} activeClassName=\"primary\">\r\n            <ListIcon type={getType(isFeed)} />\r\n            <span className={`text text_type_main-default ml-2`}>Лента заказов</span>\r\n          </NavLink>\r\n        </div>\r\n        <Logo />\r\n        <NavLink to=\"/profile\" className={`p-5 ${styles.link} secondary`} activeClassName=\"primary\">\r\n          <ProfileIcon type={getType(isProfile)} />\r\n          <span className={`text text_type_main-default ml-2`}>Личный кабинет</span>\r\n        </NavLink>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default AppHeader;","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"../../services/store\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useLocation } from \"react-router\";\r\n\r\n\r\nexport type TOrder = {\r\n  _id: string;\r\n  status: 'created' | 'pending' | 'done';\r\n  number: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  ingredients: string[];\r\n  name: string;\r\n}\r\n\r\ntype TProps = {\r\n  order: TOrder;\r\n  type: 'feed' | 'history';\r\n}\r\n\r\nexport const statuses: Record<string, string> = {\r\n  'done': 'Выполнен',\r\n  'pending': 'Готовиться',\r\n  'created': 'Создан'\r\n}\r\n\r\nexport const Icon = \r\n  ({ image }: { image: string}) => <div className={styles.preview}><img src={image} alt=\"ingredient\" /></div>;\r\n\r\nexport function OrderCard({ order, type }: TProps) {\r\n  const location = useLocation();\r\n\r\n  const { ingredients } = useSelector(store => store.ingredients);\r\n\r\n  const add = useCallback((accumulator: number, id: string) => \r\n    accumulator + (ingredients.find(ingredient => ingredient._id === id)?.price || 0), [ingredients]);\r\n\r\n  const price = useMemo(() => order.ingredients.reduce(add, 0), [add, order.ingredients]);\r\n\r\n  const orderIngredients = useMemo(() => order.ingredients.map(id => (ingredients.find(ingredient => ingredient._id === id)?.image_mobile)), [ingredients, order.ingredients]);\r\n\r\n  return (\r\n    <div className={`${styles.card} p-6 mb-4 ${type === 'feed' ? styles.feed : styles.history}`}>\r\n      <Link\r\n        to={{\r\n          pathname: `/${type === 'feed' ? 'feed' : 'profile/orders'}/${order.number}`,\r\n          // This is the trick! This link sets\r\n          // the `order` in location state.\r\n          state: { order: location },\r\n        }}\r\n      >\r\n        <div className={`${styles.header} mt-6 mb-6`}>\r\n          <span className=\"text text_type_digits-default\">#{order.number}</span>\r\n          <span className=\"text text_type_main-small secondary\">{new Date(order.createdAt).toLocaleDateString()}</span>\r\n        </div>\r\n        <div className=\"mt-6\"><span className=\"text text_type_main-medium\">{order.name}</span></div>\r\n        {type === 'history' && <div className=\"mt-2\"><span className=\"text text_type_main-small\">{statuses[order.status]}</span></div>}\r\n        <div className={`${styles.footer} mt-6`}>\r\n          <div className={styles.previews}>\r\n            {orderIngredients.map((image, index) => <Icon key={index} image={image || ''} />)}\r\n          </div>\r\n          <span className=\"text text_type_digits-default\">{price}<CurrencyIcon type=\"primary\"/></span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}","import { TOrders } from \"../../services/types/websocket\";\r\nimport { OrderCard } from \"../order-card\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype TProps = {\r\n  orders: TOrders;\r\n  type: 'feed' | 'history';\r\n}\r\n\r\nexport function Orders({ orders, type }: TProps) {\r\n  return (\r\n    <div className={`${styles.orders} pr-2`}>\r\n      {orders.map(order => <OrderCard key={order.number} order={order} type={type} />)}\r\n    </div>\r\n  )\r\n}","\r\nimport { useMemo } from 'react';\r\nimport styles from './styles.module.css';\r\nimport { TOrders } from '../../services/types/websocket';\r\n\r\ntype TProps = {\r\n  orders: TOrders;\r\n  total: number;\r\n  totalToday: number;\r\n}\r\n\r\nexport function FeedInfo({ orders, total, totalToday }: TProps) {\r\n  const done = useMemo(\r\n    () => orders.filter(order => order.status === 'done'),\r\n    [orders]);\r\n  const pending = useMemo(\r\n    () => orders.filter(order => order.status === 'pending'),\r\n    [orders]);\r\n\r\n  return (\r\n    <div className=\"ml-15\">\r\n      <div className={styles.orders}>\r\n        <div className=\"mr-9\">\r\n          <h3 className=\"text text_type_main-medium mb-4\">Готовы:</h3>\r\n          <div className={styles.grid}>{done.map(order => <span className=\"text text_type_digits-default success\" key={order.number}>{order.number}</span>)}</div>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text text_type_main-medium mb-6\">В работе:</h3>\r\n          <div className={styles.grid}>{pending.map(order => <span className=\"text text_type_digits-default\" key={order.number}>{order.number}</span>)}</div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3 className=\"text text_type_main-medium mt-15\">Выполнено за все время:</h3>\r\n        <span className=\"text text_type_digits-large\">{total}</span>\r\n      </div>\r\n      <div>\r\n        <h3 className=\"text text_type_main-medium mt-15\">Выполнено за сегодня:</h3>\r\n        <span className=\"text text_type_digits-large\">{totalToday}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect } from \"react\";\r\nimport { Orders } from \"../../components/orders\";\r\nimport { FeedInfo } from \"../../components/feed-info\";\r\nimport { connect, disconnect } from \"../../services/actions\";\r\nimport { useDispatch, useSelector } from \"../../services/store\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nexport function FeedPage() {\r\n  const dispatch = useDispatch();\r\n  const { orders, total, totalToday } = useSelector(store => store.orders);\r\n\r\n  useEffect(() => {\r\n    dispatch(connect('wss://norma.nomoreparties.space/orders/all'));\r\n    return () => {\r\n      dispatch(disconnect());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <h2 className=\"text text_type_main-large mb-5\">Лента заказов</h2>\r\n      <div className={styles.flex}>\r\n        <Orders orders={orders} type=\"feed\" />\r\n        <FeedInfo orders={orders} total={total} totalToday={totalToday} />\r\n      </div>\r\n    </main>\r\n  )\r\n}","import styles from './styles.module.css';\r\nimport Navigation from '../../components/navigation';\r\nimport { Orders } from '../../components/orders';\r\nimport { useDispatch, useSelector } from '../../services/store';\r\nimport { useEffect } from 'react';\r\nimport { connect, disconnect } from '../../services/actions';\r\n\r\nexport function OrderHistoryPage() {\r\n  const dispatch = useDispatch();\r\n  const { orders } = useSelector(store => store.orders);\r\n  const { accessToken } = useSelector(store => store.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(connect(`wss://norma.nomoreparties.space/orders?token=${accessToken}`));\r\n    return () => {\r\n      dispatch(disconnect());\r\n    };\r\n  }, [dispatch, accessToken]);\r\n\r\n  return (\r\n    <main className={[styles.history, \"main mt-30\"].join(\" \")}>\r\n      <Navigation location=\"order-history\" />\r\n      <Orders orders={orders} type=\"history\" />\r\n    </main>\r\n  )\r\n}","import styles from './styles.module.css';\r\nimport { Icon, statuses, TOrder } from '../order-card';\r\nimport { useSelector } from '../../services/store';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { TIngredient } from '../../types';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TProps = {\r\n  order: TOrder;\r\n}\r\n\r\ntype TIngredienets = Record<string, (TIngredient & { count: number })>;\r\n\r\nexport function OrderInfo({ order }: TProps) {\r\n  const { ingredients } = useSelector(store => store.ingredients);\r\n\r\n  const add = useCallback((accumulator: number, id: string) => \r\n    accumulator + (ingredients.find(ingredient => ingredient._id === id)?.price || 0), [ingredients]);\r\n  const price = useMemo(() => order.ingredients.reduce(add, 0), [add, order.ingredients]);\r\n\r\n  const orderIngredients = useMemo(() => {\r\n    let orderIngredients: TIngredienets = {};\r\n    order.ingredients.forEach(id => {\r\n      const find = ingredients.find(ingredient => ingredient._id === id);\r\n      if (find) {\r\n        if (orderIngredients[id]) {\r\n          orderIngredients[id].count += 1;\r\n        } else {\r\n          orderIngredients[id] = ({...find, count: 1});\r\n        }\r\n      }\r\n    });\r\n    return Object.values(orderIngredients);\r\n  }, [ingredients, order]);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"text text_type_digits-default\">#{order.number}</span>\r\n      <h3 className=\"text text_type_main-medium mt-10\">{order.name}</h3>\r\n      <span className=\"text text_type_main-small mt-3\">{statuses[order.status]}</span>\r\n      <h3 className=\"text text_type_main-medium mt-15\">Состав:</h3>\r\n      <div className={`${styles.ingredients} mt-6 pr-6`}>\r\n        {orderIngredients.map(ingredient => (\r\n          <div className={`${styles.row} mb-4`} key={ingredient._id} >\r\n            <div className={styles.flex}>\r\n              <Icon image={ingredient.image_mobile || ''} />\r\n              <span className=\"text text_type_main-small ml-4\">{ingredient.name}</span>\r\n            </div>\r\n            <div className={`${styles.flex} ml-4`}><span className=\"text text_type_digits-default mr-2\">{`${ingredient.count} x ${ingredient.price}`}</span><CurrencyIcon type=\"primary\" /></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={`${styles.footer} mt-10 ${styles.row}`}>\r\n        <span className=\"text text_type_main-small secondary\">{new Date(order.createdAt).toLocaleDateString()}</span>\r\n        <div className={`${styles.flex} ml-4`}><span className=\"text text_type_digits-default mr-2\">{price}</span><CurrencyIcon type=\"primary\" /></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport styles from './styles.module.css';\r\nimport { OrderInfo } from '../../components/order-info';\r\nimport { connect, disconnect } from '../../services/actions';\r\nimport { useDispatch, useSelector } from '../../services/store';\r\nimport { TParams } from '../../types';\r\n\r\ntype TProps = {\r\n  type: 'history' | 'feed',\r\n}\r\n\r\nexport function OrderInfoPage({ type }: TProps) {\r\n  const dispatch = useDispatch();\r\n  let { id } = useParams<TParams>();\r\n  const { orders } = useSelector(store => store.orders);\r\n  const { accessToken } = useSelector(store => store.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(connect(`wss://norma.nomoreparties.space/orders${type === 'feed' ? '/all' : `?token=${accessToken}`}`));\r\n    return () => {\r\n      dispatch(disconnect());\r\n    };\r\n  }, [dispatch, accessToken, type]);\r\n\r\n  const order = orders.find(({ number }) => number === +id)\r\n  if (!order) return null;\r\n\r\n  return (\r\n    <main className={[styles.order, \"main mt-30\"].join(\" \")}>\r\n      <OrderInfo order={order} />\r\n    </main>\r\n  )\r\n}","import { useHistory, useParams } from \"react-router\";\r\nimport Modal from \"../../components/modal\";\r\nimport { OrderInfo } from \"../../components/order-info\";\r\nimport { useSelector } from \"../../services/store\";\r\nimport { TParams } from \"../../types\";\r\n\r\nfunction ModalOrderPage() {\r\n  const history = useHistory();\r\n  const { id } = useParams<TParams>();\r\n  const { orders } = useSelector(store => store.orders);\r\n\r\n  const order = orders.find(({ number }) => number === +id)\r\n  if (!order) return null;\r\n\r\n  const back = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={back}>\r\n      <OrderInfo order={order} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalOrderPage;","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"../../pages/auth/login\";\nimport ProfilePage from \"../../pages/profile\";\nimport { ProtectedRoute } from \"../protected-route\";\nimport ForgotPasswordPage from \"../../pages/auth/forgot-password\";\nimport ResetPasswordPage from \"../../pages/auth/reset-password\";\nimport RegisterPage from \"../../pages/auth/register\";\nimport BurgerConstructorPage from \"../../pages/burger-constructor\";\nimport IngredientPage from \"../../pages/ingredient\";\nimport { fetchIngredients } from \"../../services/slices/ingredientsSlice\";\nimport { Redirect, useHistory, useLocation } from \"react-router\";\nimport ModalPage from \"../../pages/modal/ModalPage\";\nimport NotFound404 from \"../../pages/not-found-404\";\nimport AppHeader from \"../app-header\";\nimport { TLocationState } from \"../../types\";\nimport { FeedPage } from \"../../pages/feed\";\nimport { OrderHistoryPage } from \"../../pages/order-history\";\nimport { OrderInfoPage } from \"../../pages/order-info\";\nimport ModalOrderPage from \"../../pages/modal-order\";\nimport { useDispatch, useSelector } from \"../../services/store\";\n\nfunction ModalSwitch() {\n  const location = useLocation<TLocationState>();\n  const history = useHistory();\n\n  // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n  const ingredient = history.action === 'PUSH' && location.state && location.state.ingredient;\n  const order = history.action === 'PUSH' && location.state && location.state.order;\n\n  return (\n    <>\n      <AppHeader />\n      <Switch location={ingredient || order|| location}>\n        <Route path=\"/\" exact>\n          <BurgerConstructorPage />\n        </Route>\n        <Route path=\"/login\" exact>\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\" exact>\n          <RegisterPage />\n        </Route>\n        <Route path=\"/forgot-password\" exact>\n          <ForgotPasswordPage />\n        </Route>\n        <Route path=\"/reset-password\" exact>\n          <ResetPasswordPage />\n        </Route>\n        <Route path=\"/ingredients/:id\" exact>\n          <IngredientPage />\n        </Route>\n        <ProtectedRoute path=\"/profile\" exact>\n          <ProfilePage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders\" exact>\n          <OrderHistoryPage />\n        </ProtectedRoute>\n        <Route path=\"/feed\" exact>\n          <FeedPage />\n        </Route>\n        <Route path=\"/feed/:id\" exact>\n          <OrderInfoPage type=\"feed\" />\n        </Route>\n        <ProtectedRoute path=\"/profile/orders\" exact>\n          <OrderHistoryPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders/:id\" exact>\n          <OrderInfoPage type=\"history\" />\n        </ProtectedRoute>\n        <Route path=\"/404\">\n          <NotFound404 />\n        </Route>\n        <Redirect to=\"/404\" />\n      </Switch>\n\n      {ingredient && <Route path=\"/ingredients/:id\" children={<ModalPage />} />}\n      {order && (\n        <>\n          <Route path=\"/feed/:id\">\n            <ModalOrderPage />\n          </Route>\n          <Route path=\"/profile/orders/:id\">\n            <ModalOrderPage />\n          </Route>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const { ingredients } = useSelector(store => store.ingredients);\n\n  useEffect(() => {\n    dispatch(fetchIngredients());\n  }, [dispatch]);\n\n  if (ingredients.length === 0) {\n    return null;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <ModalSwitch />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// import logger from 'redux-logger'\nimport { Provider } from \"react-redux\";\nimport { store } from \"./services/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"styles_auth__3GlGh\",\"form\":\"styles_form__3poBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2m1o5\",\"structure\":\"styles_structure__2asiC\",\"img\":\"styles_img__YgduC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__3YLma\",\"header\":\"styles_header__12bmB\",\"footer\":\"styles_footer__2Izu6\",\"feed\":\"styles_feed__11a0t\",\"history\":\"styles_history__3hXiX\",\"preview\":\"styles_preview__3_lWM\",\"previews\":\"styles_previews__3esPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__1EapM\",\"row\":\"styles_row__3FAQK\",\"flex\":\"styles_flex__G-MFu\",\"ingredients\":\"styles_ingredients__2X96n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__3SSX4\",\"item\":\"styles_item__2Aa_R\",\"sum\":\"styles_sum__32RHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__3wYpH\",\"item\":\"styles_item__3ZXRR\",\"tip\":\"styles_tip__12xPP\",\"button\":\"styles_button__3XYfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__3vKFC\",\"card\":\"styles_card__2HpA-\",\"list\":\"styles_list__1eoza\",\"info\":\"styles_info__10qrE\",\"image\":\"styles_image__aPZO5\",\"tabs\":\"styles_tabs__zzntG\",\"ingredients_container\":\"styles_ingredients_container__3Ltj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"styles_link__3ThGf\",\"link_container\":\"styles_link_container__1D3dL\",\"header\":\"styles_header__3tmc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__2bwln\",\"info\":\"styles_info__2UorK\",\"image\":\"styles_image__39oTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"styles_profile__bjREu\",\"wrapper\":\"styles_wrapper__PadoO\",\"buttons\":\"styles_buttons__3NeGo\",\"full\":\"styles_full__3Pvdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_wrapper\":\"styles_modal_wrapper__2pn2I\",\"modal\":\"styles_modal__2Hc3f\",\"close_icon\":\"styles_close_icon__23t1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"styles_orders__KNU49\",\"grid\":\"styles_grid__S3I8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3ok7b\",\"flex\":\"styles_flex__2EgZ7\"};"],"sourceRoot":""}